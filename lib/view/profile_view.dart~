import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:news/data/controller/api_controller.dart';
import 'package:news/view/artical_view.dart';

import 'home_view.dart';

class ProfileView extends StatefulWidget {
  ProfileView({super.key});

  @override
  State<ProfileView> createState() => _ProfileViewState();
}

class _ProfileViewState extends State<ProfileView> {
  ApiController apiController = Get.put(ApiController());

  @override
  Widget build(BuildContext context) {
    var height = MediaQuery.of(context).size.height * 1;
    var width = MediaQuery.of(context).size.width * 1;
    return Scaffold(
      appBar: AppBar(
        title: Text(
          'Profile',
          style: Theme.of(context).textTheme.headlineSmall,
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          children: [
            Stack(
              children: <Widget>[
                Container(
                  margin: EdgeInsets.symmetric(vertical: 34),
                  padding: EdgeInsets.symmetric(horizontal: 10, vertical: 10),
                  height: height / 5,
                  width: width / 1.2,
                  child: Center(
                    child: Image.network(
                      'https://cdn-icons-png.flaticon.com/512/3135/3135715.png',
                    ),
                  ),
                ),
                Positioned(
                  child: CircleAvatar(
                    child: Icon(Icons.edit, color: Colors.white),
                  ),
                  top: 120,
                  right: 80,
                ),
              ],
            ),
            Column(
              mainAxisAlignment: MainAxisAlignment.start,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Card(
                  shape: BeveledRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: SwitchListTile(
                    title: Text(
                      apiController.isDark.value ? 'Dark Mode' : 'Light Mode',
                      style: Theme.of(context).textTheme.bodyLarge,
                    ),
                    secondary: Icon(
                      apiController.isDark.value
                          ? Icons.dark_mode
                          : Icons.light_mode,
                      color: Theme.of(context).colorScheme.onPrimary,
                    ),
                    activeColor: Theme.of(context).colorScheme.primary,
                    inactiveThumbColor: Theme.of(context).colorScheme.primary,
                    inactiveTrackColor:
                        Theme.of(context).colorScheme.onSecondary,
                    activeTrackColor: Theme.of(context).colorScheme.onPrimary,

                    value: apiController.isDark.value,
                    onChanged: (value) {
                      print(value);
                      apiController.changeTheme(value);
                    },
                  ),
                ),
                SizedBox(height: 20),
                CustomTile(width, 'Home', () {
                  Get.to(const HomeView());
                }, context),
                SizedBox(height: 10),
                CustomTile(width, 'Articles', () {
                  Get.to(ArticalView());
                }, context),
                SizedBox(height: 10),
                CustomTile(width, 'Settings', () {
                  Get.showSnackbar(GetSnackBar(duration : Duration(seconds: 2),message: 'Settings'));
                }, context),
                SizedBox(height: 10),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

Widget CustomTile(
  double width,
  String title,
  VoidCallback onTap,
  BuildContext context,
) {
  return Align(
    alignment: Alignment.centerLeft,
    child: SizedBox(
      width: width,
      height: 60,
      child: GestureDetector(
        excludeFromSemantics: true,
        onTap: onTap,
        child: Card(
          shape: BeveledRectangleBorder(
            borderRadius: BorderRadius.circular(10),
          ),
          child: Padding(
            padding: const EdgeInsets.only(left: 16, top: 10),
            child: Text(
              title,
              textAlign: TextAlign.left,
              style: Theme.of(context).textTheme.titleLarge,
            ),
          ),
        ),
      ),
    ),
  );
}
